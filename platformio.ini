; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = GPS module for GPS mobile apps used on track to time laps

[env]
platform = espressif32
board = esp32dev
; https://docs.platformio.org/en/latest/boards/espressif32/esp32dev.html#board-espressif32-esp32dev
framework = arduino
; Nimble-Arduino is not compatible with the git version, so skipping
; platform_packages =
;     platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
lib_deps = 
	h2zero/NimBLE-Arduino@^1.0.2
	yiannisbourkelis/Uptime Library @ ^1.0.0
	evert-arias/EasyButton @ ^2.0.1
	arkhipenko/TaskScheduler @ ^3.2.0
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
; monitor_port = /dev/cu.SLAB_USBtoUART ; for MacOS Catalina
monitor_port = /dev/cu.usbserial-0001 ; for MacOS BigSur
monitor_filters = colorize, esp32_exception_decoder
; upload_port = /dev/cu.SLAB_USBtoUART ; for MacOS Catalina
upload_port = /dev/cu.usbserial-0001 ; for MacOS BigSur
upload_speed = 921600
build_flags = !python git_rev_macro.py

[env:debug]
build_type = debug
; option below need to be multi-line otherwise platformio does not consider them - perhaps a defect in how they are defined, not sure
build_flags =
	${env.build_flags}
	-D LOG_LOCAL_LEVEL=ESP_LOG_DEBUG
	-D CORE_DEBUG_LEVEL=4
	-D OTA_AVAILABLE=-1
	-D BUILD_ENV_NAME='"test build"' 

[env:release]
; option below need to be multi-line otherwise platformio does not consider them - perhaps a defect in how they are defined, not sure
build_flags =
	${env.build_flags}
	-D LOG_LOCAL_LEVEL=ESP_LOG_NONE
	-D CORE_DEBUG_LEVEL=0
	-D BUILD_ENV_NAME='"production build"'

[ota]
upload_protocol = espota
upload_port = bonogps.local

[env:debug_ota]
extends = env:debug, ota

[env:release_ota]
extends = env:release, ota
